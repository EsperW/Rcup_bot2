import numpy as np

################################
# Внуртрениие параметры камеры #
################################



Height = 480 #Число пикселей по высоте кадра
Width = 640#Число пикселей по ширине кадра
c_x = Width//2 #Координата центра кадра в пикселях по ширине кадра
c_y = Height//2 #Координата центра кадра в пикселях по высоте кадра

Full_angle_field_visin_by_height = 40.86 #Прописать измеренный полный угол обзора камеры по высоте кадра в градусах
Full_angle_field_visin_by_width = 52.8 #Прописать измеренный полный угол обзора камеры по ширине кадра в градусах

Angle_by_pixel_from_height = Full_angle_field_visin_by_height/Height #Вычисляем число градусов на один пиксель по высоте кадра (float, градусы)
Angle_by_pixel_from_width = Full_angle_field_visin_by_width/Width #Вычисляем число градусов на один пиксель по ширине кадра (float, градусы)



###############################
# Внешние параметры параметры #
###############################
Distance = 0.198#Расстояние до центра кадра в метрах. Можно измерить визируя центр кадра на изображении маркером. Отмечаем точку на листе под маркером центра кадра, измеряем линейкой расстояние от точки до камеры. После проверок можно удалить этот параметр.
Roll_angle = 0# угол крена в градусах, по идее равен нулю для платформы если камера выставлена ровно.
Pith_angle = 90-66.5# угол тангажа в градусах, необходимо измерить, или вычислить. = 90град минус угол между оптической осью (см. измерение дистанции) и плоскостью стола. 
h_measured = 0.185#Длина перпендикуляра от камеры до стола в метрах

def calc_cord_object(Object_Center_X_local_u_v_cord, Object_Center_Y_local_u_v_cord):# Расчет координат с учетом углов
    Object_Center_u_cord_cent_cam = Object_Center_X_local_u_v_cord - c_x# Переход к пиксельным координатам в новую систему координат, где начало координат не левый верхний угол, а центр кадра. Координаты объекта пиксельные относительно центра. Здесь Object_Center_X_local_u_v_cord - найденные координаты в системе координат матирицы u-v, где 0 верхний левый угол матрицы, ось u направлена слева направо и соответствует оси Х будущей системы координат, ось v направлена сверху вниз и соответствует оси У новой системы координат.
    Object_Center_v_cord_cent_cam = -Object_Center_Y_local_u_v_cord + c_y# Переход к пиксельным координатам в новую систему координат, где начало координат не левый верхний угол, а центр кадра.
    #print('Координаты объекта пиксельные относительно центра по оси u -->', Object_Center_u_cord_cent_cam)
    #print('Координаты объекта пиксельные относительно центра по оси v -->', Object_Center_v_cord_cent_cam)

    X_object_cam_angle = Object_Center_u_cord_cent_cam * np.deg2rad(Angle_by_pixel_from_width)
    Y_object_cam_angle = Object_Center_v_cord_cent_cam * np.deg2rad(Angle_by_pixel_from_height)
    #print('Угол смещения объекта от центра кадра по оси Х', np.rad2deg(X_object_cam_angle))
    #print('Угол смещения объекта от центра кадра по оси Y', np.rad2deg(Y_object_cam_angle))

    h_calc = Distance * np.cos(np.deg2rad(Roll_angle)) * np.cos(np.deg2rad(Pith_angle)) # Нужно проверить, если все углы и дистанции внесены правильно, h_calc должно совпадать с длиной перпендикуляра от камеры до стола
    if np.absolute(h_calc - h_measured) < 0.01: #Проверяем корректость введенных данных по углам и высотам. После проверок можно удалить это условие вместе с расчетом h_calc и параметром Distance.
       #Окончательно вычисляем координаты объекта в метрах относительно центра кадра с учетом углов установки камеры
       Y_object_cam_cord = h_measured * np.tan(np.deg2rad(Pith_angle) + Y_object_cam_angle) #- h_measured * np.tan(np.deg2rad(Pith_angle))
       gamma_angle = np.arctan(np.sin(np.deg2rad(Roll_angle)) / (np.cos(np.deg2rad(Roll_angle)) * np.cos(np.deg2rad(Pith_angle))))
       X_object_cam_cord = h_measured * np.tan(-gamma_angle + X_object_cam_angle)
    else:# После проверок можно удалить это условие вместе с расчетом h_calc и параметром Distance.
       print('Ошибка! Расчитанная (по измеренной от камеры до центра кадра дистанции и углам установки камеры) высота камеры над столом не соовпадает с измеренной высотой камеры над столом. Для верного расчета необходима корректировка данных')
       X_object_cam_cord = None
       Y_object_cam_cord = None
    return X_object_cam_cord, Y_object_cam_cord

